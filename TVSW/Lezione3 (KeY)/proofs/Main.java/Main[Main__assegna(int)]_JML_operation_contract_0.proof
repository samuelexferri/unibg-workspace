\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Tue Apr 07 16:31:27 CEST 2020
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=10000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:off , Strings-Strings\\:on , modelFields-modelFields\\:showSatisfiability , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_NONCLOSE
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../../../src";

\problem {
     wellFormed(heap)
   & !self = null
   &   boolean::select(heap,
                       self,
                       java.lang.Object::<created>)
     = TRUE
   & Main::exactInstance(self) = TRUE
   & inInt(x)
   & measuredByEmpty
   & (  gt(x, Z(0(#)))
      & java.lang.Object::<inv>(heap, self))
-> {heapAtPre:=heap || _x:=x}
     \<{
         exc=null;try {result=self.assegna(_x)@Main;
         }catch (java.lang.Throwable e) {
           exc=e;
         }
       }\> (  (   exc = null
               ->     result
                    = javaMulInt(Z(2(#)),
                                 javaAddInt(x,
                                            Z(0(1(#)))))
                  & java.lang.Object::<inv>(heap, self))
            & (   !exc = null
               ->   (     java.lang.Throwable::instance(exc)
                        = TRUE
                     -> java.lang.Object::<inv>(heap,
                                                self))
                  & (    java.lang.Error::instance(exc)
                       = TRUE
                     |   java.lang.RuntimeException::instance(exc)
                       = TRUE))
            & \forall Field f;
                \forall java.lang.Object o;
                  (  elementOf(o, f, allLocs)
                   | !o = null
                   & !  boolean::select(heapAtPre,
                                        o,
                                        java.lang.Object::<created>)
                      = TRUE
                   |   any::select(heap, o, f)
                     = any::select(heapAtPre, o, f)))

}

\proof {
(keyLog "0" (keyUser "samuelexferri" ) (keyVersion "cf2b4245b92fe9df2d6b7bd158dd83ee7308d9a6"))

(autoModeTime "536")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "heapAtPre"))
(rule "translateJavaMulInt" (formula "1") (term "1,0,1,0,0,1,1"))
(rule "translateJavaAddInt" (formula "1") (term "1,1,0,1,0,0,1,1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "polySimp_addComm0" (formula "8") (term "1,1,0,1,0,0,1"))
(rule "polySimp_rightDist" (formula "8") (term "1,0,1,0,0,1"))
(rule "mul_literals" (formula "8") (term "0,1,0,1,0,0,1"))
(rule "polySimp_homoEq" (formula "8") (term "0,1,0,0,1"))
(rule "polySimp_addComm1" (formula "8") (term "0,0,1,0,0,1"))
(rule "inEqSimp_gtToGeq" (formula "5"))
(rule "times_zero_1" (formula "5") (term "1,0,0"))
(rule "add_zero_right" (formula "5") (term "0,0"))
(rule "assignment" (formula "8") (term "1"))
(builtin "One Step Simplification" (formula "8"))
(rule "polySimp_sepPosMonomial" (formula "8") (term "0,1,0,0,1"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,1,0,0,1"))
(rule "polySimp_rightDist" (formula "8") (term "1,0,1,0,0,1"))
(rule "mul_literals" (formula "8") (term "0,1,0,1,0,0,1"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,1,0,0,1"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,0,1,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "5"))
(rule "mul_literals" (formula "5") (term "1"))
(rule "Class_invariant_axiom_for_Main" (formula "6") (inst "sk=sk_0") (ifseqformula "3"))
(branch "Use Axiom"
   (rule "true_left" (formula "6"))
   (rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_assegna,savedHeapBefore_assegna"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "assignmentAdditionInt" (formula "7") (term "1"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "translateJavaAddInt" (formula "7") (term "0,1,0"))
   (rule "polySimp_addComm0" (formula "7") (term "0,1,0"))
   (rule "assignmentMultiplicationInt" (formula "7") (term "1"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "translateJavaMulInt" (formula "7") (term "0,1,0"))
   (rule "polySimp_mulComm0" (formula "7") (term "0,1,0"))
   (rule "polySimp_rightDist" (formula "7") (term "0,1,0"))
   (rule "mul_literals" (formula "7") (term "0,0,1,0"))
   (rule "methodCallReturn" (formula "7") (term "1"))
   (rule "assignment" (formula "7") (term "1"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "methodCallEmpty" (formula "7") (term "1"))
   (rule "tryEmpty" (formula "7") (term "1"))
   (rule "emptyModality" (formula "7") (term "1"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "polySimp_addAssoc" (formula "7") (term "1,0"))
   (rule "add_literals" (formula "7") (term "0,1,0"))
   (rule "add_zero_left" (formula "7") (term "1,0"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "Class_invariant_axiom_for_Main" (formula "7") (inst "sk=sk_1") (ifseqformula "3"))
   (branch "Use Axiom"
      (rule "closeTrue" (formula "7"))
   )
   (branch "Show Axiom Satisfiability"
      (builtin "One Step Simplification" (formula "7"))
      (rule "closeTrue" (formula "7"))
   )
)
(branch "Show Axiom Satisfiability"
   (builtin "One Step Simplification" (formula "7"))
   (rule "closeTrue" (formula "7"))
)
)

}
