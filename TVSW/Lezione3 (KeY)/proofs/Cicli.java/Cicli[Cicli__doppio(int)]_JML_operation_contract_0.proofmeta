<?xml version="1.0" encoding="UTF-8"?>
<proofMetaFile proofFileMD5="6aff2d7a2e90c3896676c8fd450963ec" proofClosed="true" proofOutdated="false">
   <markerMessage>
Closed Proof:
Cicli[Cicli::doppio(int)].JML operation contract.0

Time: 4.44 s
Nodes: 259
Branches: 6
   </markerMessage>
   <references rep="pre: {heap=and(geq(x,Z(0(#))),java.lang.Object::&lt;inv&gt;(heap,self))}; mby: null; post: {heap=and(imp(equals(exc,null),and(equals(result,javaMulInt(Z(2(#)),x)),java.lang.Object::&lt;inv&gt;(heap,self))),imp(not(equals(exc,null)),and(imp(equals(java.lang.Throwable::instance(exc),TRUE),java.lang.Object::&lt;inv&gt;(heap,self)),or(equals(java.lang.Error::instance(exc),TRUE),equals(java.lang.RuntimeException::instance(exc),TRUE)))))}; mods: {heap=allLocs, savedHeap=null}; hasMod: {heap=true, savedHeap=true}; termination: box; transaction: false">
      <type name="Cicli">
         <axiomReferences>
            <axiomReference kjt="Cicli" name="Class invariant axiom for Cicli" rep="equiv(java.lang.Object::&lt;inv&gt;(heap,self),true)"/>
         </axiomReferences>
         <inlineMethodReferences>
            <inlineMethodReference kjt="Cicli" name="doppio" parameters="int;" src="publicintdoppio (int x) {int counter = x;int result = x;/*//@ loop_invariant counter + result == 2 * x &amp;&amp; counter &gt;=0;*/while ( counter&gt;0 ) {     result++;     counter--;   }                 return  result; }"/>
         </inlineMethodReferences>
      </type>
   </references>
</proofMetaFile>
