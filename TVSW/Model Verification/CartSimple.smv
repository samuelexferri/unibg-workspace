--file C:\GitHub\workspace\TVSW\Model Verification\CartSimple.smv
MODULE main
	VAR
		action: {EXIT, ORDER}; --monitored
		cartState: {ADD_PRODUCT_OR_EXIT, CHOOSE_GEN_COM, CLOSED, SELECTED_COMMERCIAL, SELECTED_GENERIC, STATES_UNDEF, WAITING}; --controlled
		currentDrug: {DRUG_UNDEF, LITIO, MORFINA, PARACETAMOLO}; --controlled
		insertPrice: 0..10; --monitored
		insertQuantity: 0..10; --monitored
		numOfProductsInCart: {-2147483647, 0, 1, 2}; --controlled
		selectedAddProduct: {NO, YES}; --monitored
		selectedDrug: {LITIO, MORFINA, PARACETAMOLO}; --monitored
		selectedDrugType: {COMMERCIAL, GENERIC}; --monitored
		total: {-2147483647, 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9}; --controlled
	DEFINE
	CONSTANTS TYPE_UNDEF, COMMERCIAL, GENERIC, ACTIONS_UNDEF, EXIT, ORDER, ADDPRODUCT_UNDEF, NO, YES, DRUG_UNDEF, LITIO, MORFINA, PARACETAMOLO, STATES_UNDEF, ADD_PRODUCT_OR_EXIT, CHOOSE_GEN_COM, CLOSED, SELECTED_COMMERCIAL, SELECTED_GENERIC, WAITING;
	ASSIGN
		init(cartState) := WAITING;
		init(currentDrug) := DRUG_UNDEF;
		init(numOfProductsInCart) := 0;
		init(total) := 0;
		next(cartState) :=
			case
				(((numOfProductsInCart < 2) & (cartState = CHOOSE_GEN_COM)) & (selectedDrugType = GENERIC)): SELECTED_GENERIC;
				((!(numOfProductsInCart < 2) | ((cartState = WAITING) & (action = EXIT))) | ((selectedAddProduct = NO) & ((cartState = ADD_PRODUCT_OR_EXIT) & (numOfProductsInCart < 2)))): CLOSED;
				(((numOfProductsInCart < 2) & (cartState = SELECTED_COMMERCIAL)) | (((cartState = SELECTED_GENERIC) & (numOfProductsInCart < 2)) | ((cartState = WAITING) & (action = ORDER)))): ADD_PRODUCT_OR_EXIT;
				((selectedAddProduct = YES) & ((cartState = ADD_PRODUCT_OR_EXIT) & (numOfProductsInCart < 2))): CHOOSE_GEN_COM;
				(((numOfProductsInCart < 2) & (cartState = CHOOSE_GEN_COM)) & (selectedDrugType = COMMERCIAL)): SELECTED_COMMERCIAL;
				TRUE: cartState;
			esac;
		next(currentDrug) :=
			case
				((cartState = SELECTED_GENERIC) & (numOfProductsInCart < 2)): selectedDrug;
				TRUE: currentDrug;
			esac;
		next(numOfProductsInCart) :=
			case
				(((cartState = SELECTED_GENERIC) & (numOfProductsInCart < 2)) | ((numOfProductsInCart < 2) & (cartState = SELECTED_COMMERCIAL))) & (numOfProductsInCart + 1) in {-2147483647, 0, 1, 2}: (numOfProductsInCart + 1);
				TRUE: numOfProductsInCart;
			esac;
		next(total) :=
			case
				((cartState = SELECTED_GENERIC) & (numOfProductsInCart < 2)) & (total + (1 * insertQuantity)) in {-2147483647, 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9}: (total + (1 * insertQuantity));
				((numOfProductsInCart < 2) & (cartState = SELECTED_COMMERCIAL)) & (total + (insertPrice * insertQuantity)) in {-2147483647, 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9}: (total + (insertPrice * insertQuantity));
				TRUE: total;
			esac;
--CTL properties
CTLSPEC NAME ctl0 := AG((numOfProductsInCart <= 2));
CTLSPEC NAME ctl1 := AG(((cartState = CLOSED) -> AG((cartState = CLOSED))));
CTLSPEC NAME ctl2 := AG(((cartState = CHOOSE_GEN_COM) -> AF((cartState = CLOSED))));
CTLSPEC NAME ctl3 := AG((((cartState = WAITING) & (action = EXIT)) -> AX((cartState = CLOSED))));
CTLSPEC NAME ctl4 := AG((((selectedAddProduct = NO) & (cartState = ADD_PRODUCT_OR_EXIT)) -> AX((cartState = CLOSED))));
